/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import javax.swing.JOptionPane; 
/**
 *
 * @author Kev
 */
public class Rainfall extends javax.swing.JFrame {

    /**
     * Creates new form Rainfall
     */
    public Rainfall() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        exitbutton = new javax.swing.JButton();
        howmanyyearsofdata = new javax.swing.JLabel();
        yearsofdata = new javax.swing.JTextField();
        startbutton = new javax.swing.JButton();
        totalrain = new javax.swing.JTextField();
        totalraintxt = new javax.swing.JLabel();
        monthslookedat = new javax.swing.JTextField();
        numofmonthstxt = new javax.swing.JLabel();
        avgmonthlyrainfalltxt = new javax.swing.JLabel();
        avgmonthlyrainfall = new javax.swing.JTextField();
        clearbutton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        title.setForeground(new java.awt.Color(0, 204, 204));
        title.setText("Tracking Monthly Rainfall");

        exitbutton.setText("EXIT");
        exitbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbuttonActionPerformed(evt);
            }
        });

        howmanyyearsofdata.setText("How many years of data?");

        yearsofdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearsofdataActionPerformed(evt);
            }
        });

        startbutton.setText("START");
        startbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startbuttonActionPerformed(evt);
            }
        });

        totalraintxt.setText("Total Rainfall:");

        numofmonthstxt.setText("# of Months:");

        avgmonthlyrainfalltxt.setText("Avgerage Monthly Rainfall:");

        clearbutton.setText("CLEAR");
        clearbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(clearbutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(exitbutton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(totalraintxt)
                                            .addComponent(numofmonthstxt)
                                            .addComponent(avgmonthlyrainfalltxt))
                                        .addGap(7, 7, 7)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(totalrain, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(monthslookedat, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(avgmonthlyrainfall, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(howmanyyearsofdata, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                                .addComponent(yearsofdata, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(howmanyyearsofdata)
                    .addComponent(yearsofdata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(startbutton, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalrain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalraintxt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numofmonthstxt)
                    .addComponent(monthslookedat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(avgmonthlyrainfall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(avgmonthlyrainfalltxt))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitbutton)
                    .addComponent(clearbutton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbuttonActionPerformed
       System.exit(0);
    }//GEN-LAST:event_exitbuttonActionPerformed

    private void clearbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbuttonActionPerformed
        avgmonthlyrainfall.setText("");
        monthslookedat.setText("");
        totalrain.setText("");
        yearsofdata.setText("");
    }//GEN-LAST:event_clearbuttonActionPerformed

    private void yearsofdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearsofdataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearsofdataActionPerformed

    private void startbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startbuttonActionPerformed
        //declarations
        int iterations=0, howmanymonths=0;
        double month=0, months=0, year=0, avg=0;
		
        //input
        iterations=Integer.parseInt(yearsofdata.getText());
        if(iterations<1)
            JOptionPane.showMessageDialog(null,"You must choose at least 1 for the years of data to look at!");
        howmanymonths = iterations * 12;
    for(int i=1;i<=iterations;i++)
	{
            //year
                JOptionPane.showMessageDialog(null,"Enter for year " + i +".");
        for(int j=1;j<=12;j++)
		{
                    //month
                    switch(j)
                    {
                        case 1:
                            do
                            {
                                if(month<0)
                                    JOptionPane.showMessageDialog(null,"Enter 0 or higher number for rainfall!");
                                month=Double.parseDouble(JOptionPane.showInputDialog("January rainfall in inches?"));
                            }while(month<0);    
                            break;
                        case 2:     
                            do
                            {
                                if(month<0)
                                    JOptionPane.showMessageDialog(null,"Enter 0 or higher number for rainfall!");
                                month=Double.parseDouble(JOptionPane.showInputDialog("February rainfall in inches?"));
                            }while(month<0);    
                            break;
                        case 3:     
                            do
                            {
                                if(month<0)
                                    JOptionPane.showMessageDialog(null,"Enter 0 or higher number for rainfall!");
                                month=Double.parseDouble(JOptionPane.showInputDialog("March rainfall in inches?"));
                            }while(month<0);    
                            break;
                        case 4:     
                            do
                            {
                                if(month<0)
                                    JOptionPane.showMessageDialog(null,"Enter 0 or higher number for rainfall!");
                                month=Double.parseDouble(JOptionPane.showInputDialog("April rainfall in inches?"));
                            }while(month<0);    
                            break;
                        case 5:     
                            do
                            {
                                if(month<0)
                                    JOptionPane.showMessageDialog(null,"Enter 0 or higher number for rainfall!");
                                month=Double.parseDouble(JOptionPane.showInputDialog("May rainfall in inches?"));
                            }while(month<0);    
                            break;
                        case 6:     
                            do
                            {
                                if(month<0)
                                    JOptionPane.showMessageDialog(null,"Enter 0 or higher number for rainfall!");
                                month=Double.parseDouble(JOptionPane.showInputDialog("June rainfall in inches?"));
                            }while(month<0);    
                            break;
                        case 7:
                            do
                            {
                                if(month<0)
                                    JOptionPane.showMessageDialog(null,"Enter 0 or higher number for rainfall!");    
                                month=Double.parseDouble(JOptionPane.showInputDialog("July rainfall in inches?"));
                            }while(month<0);    
                            break;
                        case 8:     
                            do
                            {
                                if(month<0)
                                    JOptionPane.showMessageDialog(null,"Enter 0 or higher number for rainfall!");    
                                month=Double.parseDouble(JOptionPane.showInputDialog("August rainfall in inches?"));
                            }while(month<0);    
                            break;
                        case 9:     
                            do
                            {
                                if(month<0)
                                    JOptionPane.showMessageDialog(null,"Enter 0 or higher number for rainfall!");    
                                month=Double.parseDouble(JOptionPane.showInputDialog("September rainfall in inches?"));
                            }while(month<0);    
                            break;
                        case 10:     
                            do
                            {
                                if(month<0)
                                    JOptionPane.showMessageDialog(null,"Enter 0 or higher number for rainfall!");    
                                month=Double.parseDouble(JOptionPane.showInputDialog("October rainfall in inches?"));
                            }while(month<0);    
                            break;
                        case 11:     
                            do
                            {
                                if(month<0)
                                    JOptionPane.showMessageDialog(null,"Enter 0 or higher number for rainfall!");    
                                month=Double.parseDouble(JOptionPane.showInputDialog("November rainfall in inches?"));
                            }while(month<0);    
                            break;
                        case 12:     
                            do
                            {
                                if(month<0)
                                    JOptionPane.showMessageDialog(null,"Enter 0 or higher number for rainfall!");    
                                month=Double.parseDouble(JOptionPane.showInputDialog("December rainfall in inches?"));
                            }while(month<0);    
                            break;
                    }
                    months+=month;	
		}
                year+=months;
                months = 0;
	}
        //processing
       avg = year/(double)howmanymonths;
        
        //output
       if(iterations>0) 
       {
            totalrain.setText(Double.toString(year));
            monthslookedat.setText(Integer.toString(howmanymonths));
            avgmonthlyrainfall.setText(Double.toString(avg));
       }
    }//GEN-LAST:event_startbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rainfall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rainfall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rainfall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rainfall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rainfall().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField avgmonthlyrainfall;
    private javax.swing.JLabel avgmonthlyrainfalltxt;
    private javax.swing.JButton clearbutton;
    private javax.swing.JButton exitbutton;
    private javax.swing.JLabel howmanyyearsofdata;
    private javax.swing.JTextField monthslookedat;
    private javax.swing.JLabel numofmonthstxt;
    private javax.swing.JButton startbutton;
    private javax.swing.JLabel title;
    private javax.swing.JTextField totalrain;
    private javax.swing.JLabel totalraintxt;
    private javax.swing.JTextField yearsofdata;
    // End of variables declaration//GEN-END:variables
}
